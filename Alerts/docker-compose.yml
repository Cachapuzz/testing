


services:
  alertservice:
    container_name: alertservice
    image: ${DOCKER_REGISTRY-}alertservice
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "8080:8080" 
      - "443"
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
  #   volumes:
  #     - certs:/usr/share/kibana/config/certs
  #     - kibanadata:/usr/share/kibana/data
  #   ports:
  #     - ${KIBANA_PORT}:5601
  #   environment:
  #     - SERVERNAME=kibana
  #     - ELASTICSEARCH_HOSTS=https://es01:9200
  #     - ELASTICSEARCH_USERNAME=kibana_system
  #     - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
  #     - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
  #     - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=1Cachapuz!2022elasticsearchalerts
  #   mem_limit: ${MEM_LIMIT}
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
  #       ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 120
  #   restart: always


  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   restart: unless-stopped
  #   ports:
  #    - '3000:3000'
  #   volumes:
  #     - grafana-storage:/var/lib/grafana

      

# volumes:
#   certs:
#     driver: local
#   kibanadata:
#     driver: local
#   grafana-storage:
#     driver: local
 